name: CI

on:
  workflow_dispatch:
  push:
    branches: [ master, github-workflow-test ]
    tags:
      - 'v*.*.*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        with:
          draft: false
          prerelease: false
          release_name: ${{ github.ref }}
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

  build:
    runs-on: windows-2022
    needs: create-release
    strategy:
      matrix:
        version:
          - {major: 5, minor: 3, branch: "5.3"}
          - {major: 5, minor: 4, branch: "5.4"}
          - {major: 5, minor: 5, branch: "5.5"}
      # Limit parallel jobs to avoid resource exhaustion
      max-parallel: 1
    steps:
      - name: Checkout Plugin
        uses: actions/checkout@v4
        with:
          path: UnrealLibretro

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Cache Unreal Engine
        id: cache-ue
        uses: actions/cache@v3
        with:
          path: UnrealEngine
          key: ue-${{ matrix.version.major }}.${{ matrix.version.minor }}-${{ runner.os }}-${{ hashFiles('**/Setup.bat', '**/GenerateProjectFiles.bat') }}
          restore-keys: |
            ue-${{ matrix.version.major }}.${{ matrix.version.minor }}-${{ runner.os }}-

      - name: Checkout Unreal Engine
        if: steps.cache-ue.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          repository: EpicGames/UnrealEngine
          ref: ${{ matrix.version.branch }}-release
          path: UnrealEngine
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: false

      - name: Setup Unreal Engine Dependencies
        if: steps.cache-ue.outputs.cache-hit != 'true'
        working-directory: UnrealEngine
        run: |
          # Run setup script with minimal options to save space/time
          .\Setup.bat --exclude=Mac --exclude=macOS --exclude=Linux --exclude=linux-x64 --exclude=Android --exclude=IOS --exclude=TVOS --exclude=HoloLens --exclude=PS4 --exclude=PS5 --exclude=XboxOne --exclude=Switch --exclude=Documentation --exclude=Samples --exclude=Templates --exclude=FeaturePacks --exclude=Debug --exclude=DebugGame
        shell: cmd

      - name: Generate Project Files
        if: steps.cache-ue.outputs.cache-hit != 'true'
        working-directory: UnrealEngine
        run: .\GenerateProjectFiles.bat
        shell: cmd

      - name: Build Unreal Engine (Minimal)
        if: steps.cache-ue.outputs.cache-hit != 'true'
        working-directory: UnrealEngine
        run: |
          # Build only essential tools needed for plugin packaging
          msbuild Engine\Source\Programs\UnrealBuildTool\UnrealBuildTool.csproj /p:Configuration=Development /p:Platform=AnyCPU
          msbuild Engine\Source\Programs\AutomationTool\AutomationTool.csproj /p:Configuration=Development /p:Platform=AnyCPU
        shell: pwsh

      - name: Free Disk Space
        run: |
          # Clean up unnecessary files to free space
          if (Test-Path "UnrealEngine\Engine\Binaries\ThirdParty") { 
            Remove-Item -Recurse -Force "UnrealEngine\Engine\Binaries\ThirdParty" -ErrorAction SilentlyContinue
          }
          if (Test-Path "UnrealEngine\Engine\Documentation") {
            Remove-Item -Recurse -Force "UnrealEngine\Engine\Documentation" -ErrorAction SilentlyContinue
          }
          if (Test-Path "UnrealEngine\Engine\Extras") {
            Remove-Item -Recurse -Force "UnrealEngine\Engine\Extras" -ErrorAction SilentlyContinue
          }
        shell: pwsh

      - name: Build Plugin
        run: |
          $enginePath = "${{ github.workspace }}\UnrealEngine"
          $pluginPath = "${{ github.workspace }}\UnrealLibretro"
          $outputPath = "${{ runner.temp }}\UnrealLibretro-${{ matrix.version.major }}.${{ matrix.version.minor }}"
          
          # Create output directory
          New-Item -ItemType Directory -Force -Path $outputPath
          
          # Use RunUAT to package the plugin
          & "$enginePath\Engine\Build\BatchFiles\RunUAT.bat" BuildPlugin -Plugin="$pluginPath\UnrealLibretro.uplugin" -Package="$outputPath" -Rocket -TargetPlatforms=Win64
        shell: pwsh

      - name: Create Archive
        run: |
          $outputPath = "${{ runner.temp }}\UnrealLibretro-${{ matrix.version.major }}.${{ matrix.version.minor }}"
          Compress-Archive -Path $outputPath -DestinationPath "$outputPath.zip"
        shell: pwsh

      - name: Upload Build-Artifact
        if: startsWith(github.ref, 'refs/heads/')
        uses: actions/upload-artifact@v4
        with:
          name: UnrealLibretro-${{ matrix.version.major }}.${{ matrix.version.minor }}
          path: ${{ runner.temp }}/UnrealLibretro-${{ matrix.version.major }}.${{ matrix.version.minor }}
          if-no-files-found: error

      - name: Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ runner.temp }}/UnrealLibretro-${{ matrix.version.major }}.${{ matrix.version.minor }}.zip
          asset_name: UnrealLibretro-${{ matrix.version.major }}.${{ matrix.version.minor }}.zip
          asset_content_type: application/zip
