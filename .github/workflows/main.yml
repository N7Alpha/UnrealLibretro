name: CI

on:
  workflow_dispatch:
  push:
    branches: [master, github-workflow-test]
    tags: ['v*.*.*']

jobs:
  create-release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          draft: false
          prerelease: false
          release_name: ${{ github.ref }}
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: windows-latest
    needs: ${{ startsWith(github.ref, 'refs/tags/') && 'create-release' || '' }}
    strategy:
      fail-fast: false
      matrix:
        version: ${{ contains(github.ref, 'refs/tags/') && fromJSON('[[4,24],[4,25],[4,26],[4,27],[5,0],[5,1],[5,2],[5,3],[5,4],[5,5]]') || [[5,5]] }}
    steps:
      - name: Checkout plugin
        uses: actions/checkout@v4

      - name: Configure Git for UE clone
        run: |
          git config --global user.name "CI Builder"
          git config --global user.email "ci@example.com"
          git config --global credential.helper store
          echo "https://x-access-token:${{ secrets.UE_ACCESS_TOKEN }}@github.com" > "$HOME/.git-credentials"

      - name: Clone Unreal Engine
        run: |
          git clone --depth 1 --no-checkout --filter=blob:none "https://github.com/EpicGames/UnrealEngine.git" UE
          cd UE
          git checkout ${{ matrix.version[0] }}.${{ matrix.version[1] }}

      - name: Build Unreal Engine
        run: |
          cd UE
          .\Setup.bat
          .\GenerateProjectFiles.bat -waitmutex
          
          $solution = if (${{ matrix.version[0] }} -ge 5) { "UE5.sln" } else { "UE4.sln" }
          $target = if (${{ matrix.version[0] }} -ge 5) { "UnrealEditor" } else { "UE4Editor" }
          msbuild $solution -t:$target -p:Configuration=Development -p:Platform=Win64 -m:2 -p:BuildInParallel=true

      - name: Set up UE environment
        run: |
          $uePath = (Get-Item -Path ".\UE").FullName
          $varName = "UE_${{ matrix.version[0] }}_${{ matrix.version[1] }}"
          echo "$varName=$uePath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Build plugin
        run: |
          python package.py "$env:UE_${{ matrix.version[0] }}_${{ matrix.version[1] }}" "$env:RUNNER_TEMP"

      - name: Upload Artifact
        if: startsWith(github.ref, 'refs/heads/')
        uses: actions/upload-artifact@v4
        with:
          name: UnrealLibretro-${{ matrix.version[0] }}.${{ matrix.version[1] }}
          path: ${{ runner.temp }}/UnrealLibretro-${{ matrix.version[0] }}.${{ matrix.version[1] }}.zip
          if-no-files-found: error

      - name: Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ runner.temp }}/UnrealLibretro-${{ matrix.version[0] }}.${{ matrix.version[1] }}.zip
          asset_name: UnrealLibretro-${{ matrix.version[0] }}.${{ matrix.version[1] }}.zip
          asset_content_type: application/zip
